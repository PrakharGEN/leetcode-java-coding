class Solution{
    public static long distinctColoring(int N, int[]r, int[]g, int[]b){
        long[][] dp = new long[N + 1][3];
        dp[1][0] = r[0];
        dp[1][1] = g[0];
        dp[1][2] = b[0];
        for (int i = 2; i <= N; i++) {
            dp[i][0] = Math.min(dp[i - 1][1], dp[i - 1][2]) + r[i - 1];
            dp[i][1] = Math.min(dp[i - 1][0], dp[i - 1][2]) + g[i - 1];
            dp[i][2] = Math.min(dp[i - 1][0], dp[i - 1][1]) + b[i - 1];
        }
        return Math.min(dp[N][0], Math.min(dp[N][1], dp[N][2]));
    }

}