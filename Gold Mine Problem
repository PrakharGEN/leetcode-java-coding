class Solution{
    static int maxGold(int n, int m, int M[][])
    {
        int[][] dp = new int[n][m];
        int cost = Integer.MIN_VALUE;
        
        for(int j=m-1;j>=0;j--){
            for(int i=n-1;i>=0;i--){
                if(j==m-1){
                    dp[i][j] = M[i][j];
                }else if(i==n-1){
                    dp[i][j] = i-1<0 ? M[i][j] + dp[i][j+1] : M[i][j] + Math.max(dp[i][j+1],dp[i-1][j+1]);
                }else if(i==0){
                    dp[i][j] = M[i][j] + Math.max(dp[i][j+1],dp[i+1][j+1]);
                }else{
                    dp[i][j] = M[i][j] + Math.max(dp[i-1][j+1], Math.max(dp[i][j+1],dp[i+1][j+1]));
                }
                
                if(j==0) cost = Math.max(cost, dp[i][j]);
            }
        }
        
        return cost;
    }
}